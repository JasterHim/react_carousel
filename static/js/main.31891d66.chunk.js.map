{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentItemIndex","nextButton","props","step","frameSize","images","infinite","lastItemIndex","length","setState","prevButton","this","itemWidth","animationDuration","prevDisabled","nextDisabled","className","style","width","map","img","index","transform","transition","src","alt","type","onClick","disabled","Component","App","htmlFor","id","value","min","max","onChange","event","target","name","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31891d66.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Carousel.scss';\n\ninterface State {\n  currentItemIndex: number,\n}\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    currentItemIndex: 0,\n  };\n\n  nextButton = () => {\n    const {\n      step,\n      frameSize,\n      images,\n      infinite,\n    } = this.props;\n    const { currentItemIndex } = this.state;\n\n    const lastItemIndex = images.length - frameSize;\n\n    this.setState({\n      currentItemIndex: currentItemIndex + step > lastItemIndex\n        ? lastItemIndex\n        : currentItemIndex + step,\n    });\n\n    if (currentItemIndex === lastItemIndex && infinite) {\n      this.setState({\n        currentItemIndex: 0,\n      });\n    }\n  };\n\n  prevButton = () => {\n    const {\n      step,\n      frameSize,\n      images,\n      infinite,\n    } = this.props;\n    const { currentItemIndex } = this.state;\n\n    const firstItemIndex = 0;\n\n    this.setState({\n      currentItemIndex: currentItemIndex - step > firstItemIndex\n        ? currentItemIndex - step\n        : firstItemIndex,\n    });\n\n    if (currentItemIndex === firstItemIndex && infinite) {\n      this.setState({\n        currentItemIndex: images.length - frameSize,\n      });\n    }\n  };\n\n  render(): React.ReactNode {\n    const { currentItemIndex } = this.state;\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const prevDisabled = currentItemIndex === 0 && !infinite;\n    const nextDisabled = currentItemIndex === images.length - frameSize\n      && !infinite;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n\n        <ul className=\"Carousel__list\">\n          {images.map((img, index) => (\n            <li\n              key={img}\n              style={{\n                transform: `translateX(-${currentItemIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={img}\n                alt={`emoticon #${index + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            onClick={this.prevButton}\n            disabled={prevDisabled}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={this.nextButton}\n            disabled={nextDisabled}\n          >\n            Next\n          </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <div className=\"App__labels\">\n          <label\n            htmlFor=\"itemId\"\n            className=\"App__label\"\n          >\n            Item Width:\n            <input\n              id=\"itemId\"\n              type=\"number\"\n              value={itemWidth}\n              min={130}\n              max={260}\n              step={10}\n              onChange={(event) => {\n                this.setState({\n                  itemWidth: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"stepId\"\n            className=\"App__label\"\n          >\n            Step:\n            <input\n              id=\"stepId\"\n              type=\"number\"\n              value={step}\n              min={1}\n              max={10}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  step: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frameId\"\n            className=\"App__label\"\n          >\n            Frame Size:\n            <input\n              id=\"frameId\"\n              type=\"number\"\n              value={frameSize}\n              min={1}\n              max={10}\n              step={1}\n              onChange={(event) => {\n                this.setState({\n                  frameSize: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"durationId\"\n            className=\"App__label\"\n          >\n            Animation Duration:\n            <input\n              id=\"durationId\"\n              type=\"number\"\n              value={animationDuration}\n              min={0}\n              max={50000}\n              step={500}\n              onChange={(event) => {\n                this.setState({\n                  animationDuration: +event.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            className=\"App__label\"\n            htmlFor=\"infinite\"\n          >\n            Infinite:\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              name=\"infinite\"\n              onChange={(event) => {\n                this.setState({\n                  infinite: event.target.checked,\n                });\n              }}\n            />\n          </label>\n\n        </div>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}